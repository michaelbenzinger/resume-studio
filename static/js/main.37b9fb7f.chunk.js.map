{"version":3,"sources":["components/Navigation.js","components/UpdateButtons.js","components/forms/PersonalInfoForm.js","components/WorkHistory.js","components/forms/WorkHistoryForm.js","components/forms/SkillsForm.js","components/forms/EducationForm.js","components/forms/Preferences.js","components/UpdateForms.js","components/PersonalInfo.js","components/Skills.js","components/Education.js","components/Preview.js","App.js","index.js"],"names":["Navigation","props","title","color","dark","expand","container","className","navbar","onClick","window","print","class","target","rel","href","UpdateButtons","useState","visible","setVisible","activeForm","setActiveForm","useEffect","block","PersonalInfoForm","personalInfo","setPersonalInfo","onSubmit","e","preventDefault","firstName","lastName","tagline","email","phone","website","value","joinChar","for","xs","sm","name","type","defaultValue","isEmpty","obj","empty","Object","keys","forEach","key","WorkHistory","workHistory","length","map","job","position","startDate","endDate","employer","description","WorkHistoryForm","setWorkHistory","JSON","parse","stringify","workHistoryTemp","setWorkHistoryTemp","page","setPage","blankJob","handleChange","newWorkHistory","filteredWorkHistory","filter","push","onChange","disabled","newWorkHistoryTemp","i","undefined","SkillsForm","skills","setSkills","numSkillsFromProps","skills3","category3","skills2","category2","numSkills","setNumSkills","skillsTemp","setSkillsTemp","newSkills","category1","skills1","EducationForm","education","setEducation","educationTemp","setEducationTemp","blankProgram","school","degree","newEducation","filteredEducation","program","newEducationTemp","Preferences","preferences","setPreferences","newPreferences","font","newFont","document","querySelector","style","fontFamily","changeFont","UpdateForms","PersonalInfo","contactProps","item","join","Skills","fluid","Education","Preview","App","md","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.37b9fb7f.chunk.js","sourcesContent":["import { Navbar, Nav, NavLink, NavItem, NavbarBrand } from 'reactstrap';\n\nexport default function Navigation(props) {\n  const { title } = props;\n  return (\n    <Navbar color=\"dark\" dark expand=\"xs\" container=\"sm\">\n      <NavbarBrand className=\"me-auto\">{title}</NavbarBrand>\n      <Nav navbar>\n        <NavItem>\n          <NavLink\n            onClick={() => {\n              window.print();\n            }}\n          >\n            <i class=\"fas fa-print\"></i>\n            <span>Print</span>\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            href=\"https://github.com/michaelbenzinger\"\n          >\n            <i class=\"fab fa-github\"></i>\n\n            <span>GitHub</span>\n          </NavLink>\n        </NavItem>\n      </Nav>\n    </Navbar>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { Button } from 'reactstrap';\n\nexport default function UpdateButtons(props) {\n  const [visible, setVisible] = useState(true);\n\n  const { activeForm, setActiveForm } = props;\n\n  useEffect(() => {\n    if (activeForm === null) {\n      setVisible(true);\n    } else {\n      setVisible(false);\n    }\n  }, [activeForm]);\n\n  return (\n    <div>\n      {visible ? (\n        <div className=\"update-buttons\">\n          <Button\n            className=\"mb-2\"\n            onClick={() => {\n              setActiveForm('PersonalInfoForm');\n            }}\n            block\n            color=\"primary\"\n          >\n            Update Personal Info\n          </Button>\n          <Button\n            className=\"mb-2\"\n            onClick={() => {\n              setActiveForm('WorkHistoryForm');\n            }}\n            block\n            color=\"primary\"\n          >\n            Update Work History\n          </Button>\n          <Button\n            className=\"mb-2\"\n            onClick={() => {\n              setActiveForm('SkillsForm');\n            }}\n            block\n            color=\"primary\"\n          >\n            Update Skills\n          </Button>\n          <Button\n            className=\"mb-2\"\n            onClick={() => {\n              setActiveForm('EducationForm');\n            }}\n            block\n            color=\"primary\"\n          >\n            Update Education\n          </Button>\n          <Button\n            className=\"mb-2 mt-4\"\n            onClick={() => {\n              setActiveForm('Preferences');\n            }}\n            block\n            color=\"secondary\"\n          >\n            Preferences\n          </Button>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import {\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  FormText,\n  Input,\n  Label,\n  Button,\n} from 'reactstrap';\n\nexport default function PersonalInfoForm(props) {\n  const { personalInfo, setPersonalInfo } = props;\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const { firstName, lastName, tagline, email, phone, website } = e.target;\n    setPersonalInfo({\n      firstName: firstName.value,\n      lastName: lastName.value,\n      tagline: tagline.value,\n      email: email.value,\n      phone: phone.value,\n      website: website.value,\n      joinChar: personalInfo.joinChar,\n    });\n  };\n\n  return (\n    <div className=\"personal-info-form resume-form\">\n      <h3>Peronsal Info</h3>\n      <Form onSubmit={onSubmitForm}>\n        <Label for=\"name\">Full Name</Label>\n        <Row xs=\"1\" sm=\"2\">\n          <Col>\n            <FormGroup>\n              <Input\n                name=\"firstName\"\n                type=\"text\"\n                defaultValue={personalInfo.firstName || ''}\n              />\n              <FormText>First</FormText>\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Input\n                name=\"lastName\"\n                type=\"text\"\n                defaultValue={personalInfo.lastName || ''}\n              />\n              <FormText>Last</FormText>\n            </FormGroup>\n          </Col>\n        </Row>\n        <FormGroup>\n          <Label for=\"tagline\">Tagline</Label>\n          <Input\n            name=\"tagline\"\n            type=\"textarea\"\n            defaultValue={personalInfo.tagline || ''}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"email\">Email</Label>\n          <Input\n            name=\"email\"\n            type=\"text\"\n            defaultValue={personalInfo.email || ''}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"phone\">Phone</Label>\n          <Input\n            name=\"phone\"\n            type=\"text\"\n            defaultValue={personalInfo.phone || ''}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"website\">Website</Label>\n          <Input\n            name=\"website\"\n            type=\"text\"\n            defaultValue={personalInfo.website || ''}\n          />\n        </FormGroup>\n        <Button type=\"submit\" color=\"primary\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","export function isEmpty(obj) {\n  let empty = true;\n  Object.keys(obj).forEach(key => {\n    if (obj[key]) empty = false;\n  });\n  return empty;\n}\n\nexport default function WorkHistory(props) {\n  const { workHistory } = props;\n\n  if (workHistory.length > 0 && !isEmpty(workHistory[0])) {\n    return (\n      <div>\n        <hr />\n        <h5>Work History</h5>\n        {workHistory.map(job => (\n          <div key={job.employer} className=\"mt-2\">\n            <div className=\"job-top\">\n              <h3>{job.position}</h3>\n              {job.startDate || job.endDate ? (\n                <div>{job.startDate + ' – ' + job.endDate}</div>\n              ) : (\n                <div />\n              )}\n            </div>\n            <h4>{job.employer}</h4>\n            <div className=\"pre-wrap\">{job.description}</div>\n          </div>\n        ))}\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n","import { useState } from 'react';\nimport { isEmpty } from '../WorkHistory';\nimport {\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  FormText,\n  Input,\n  Label,\n  Button,\n} from 'reactstrap';\n\nexport default function WorkHistoryForm(props) {\n  const { workHistory, setWorkHistory } = props;\n\n  const [workHistoryTemp, setWorkHistoryTemp] = useState(\n    JSON.parse(JSON.stringify(workHistory))\n  );\n\n  const [page, setPage] = useState(0);\n\n  const blankJob = {\n    employer: '',\n    position: '',\n    startDate: '',\n    endDate: '',\n    description: '',\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const filteredWorkHistory = workHistoryTemp.filter(\n      job =>\n        job.employer ||\n        job.position ||\n        job.startDate ||\n        job.endDate ||\n        job.description\n    );\n    if (filteredWorkHistory.length === 0) {\n      filteredWorkHistory.push(blankJob);\n    }\n    setWorkHistory(filteredWorkHistory);\n  };\n\n  const nextPage = () => {\n    if (!workHistoryTemp[page + 1]) {\n      setWorkHistoryTemp([...workHistoryTemp, blankJob]);\n    }\n    setPage(page + 1);\n  };\n\n  const prevPage = () => {\n    if (page !== 0) {\n      setPage(page - 1);\n    }\n  };\n\n  const deletePage = () => {\n    const newWorkHistoryTemp = [];\n    for (let i = 0; i < workHistoryTemp.length; i++) {\n      if (i !== page) {\n        newWorkHistoryTemp.push(workHistoryTemp[i]);\n      }\n    }\n    if (newWorkHistoryTemp[0] === undefined) {\n      newWorkHistoryTemp.push(blankJob);\n    }\n    setWorkHistoryTemp(newWorkHistoryTemp);\n    if (page > 0) {\n      setPage(page - 1);\n    }\n  };\n\n  const handleChange = e => {\n    const newWorkHistory = JSON.parse(JSON.stringify(workHistoryTemp));\n    newWorkHistory[page][e.target.name] = e.target.value;\n    setWorkHistoryTemp(newWorkHistory);\n  };\n\n  return (\n    <div className=\"work-history-form resume-form\">\n      <h3>Work History</h3>\n      <Form onSubmit={onSubmitForm}>\n        <FormText>Job {page + 1}</FormText>\n        <FormGroup>\n          <Label for=\"employer\">Employer</Label>\n          <Input\n            name=\"employer\"\n            type=\"text\"\n            onChange={handleChange}\n            value={workHistoryTemp[page].employer || ''}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"position\">Position</Label>\n          <Input\n            name=\"position\"\n            type=\"text\"\n            onChange={handleChange}\n            value={workHistoryTemp[page].position || ''}\n          />\n        </FormGroup>\n        <Row xs=\"1\" sm=\"2\">\n          <Col>\n            <FormGroup>\n              <Label for=\"startDate\">Start Date</Label>\n              <Input\n                name=\"startDate\"\n                type=\"text\"\n                onChange={handleChange}\n                value={workHistoryTemp[page].startDate || ''}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"endDate\">End Date</Label>\n              <Input\n                name=\"endDate\"\n                type=\"text\"\n                onChange={handleChange}\n                value={workHistoryTemp[page].endDate || ''}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <FormGroup>\n          <Label for=\"description\">Description</Label>\n          <Input\n            type=\"textarea\"\n            name=\"description\"\n            onChange={handleChange}\n            value={workHistoryTemp[page].description || ''}\n          />\n        </FormGroup>\n        <Button\n          disabled={!page}\n          onClick={prevPage}\n          type=\"button\"\n          color=\"dark\"\n          className=\"me-2 mb-2\"\n        >\n          Previous Job\n        </Button>\n        <Button\n          onClick={nextPage}\n          disabled={isEmpty(workHistoryTemp[page])}\n          type=\"button\"\n          color=\"dark\"\n          className=\"me-2 mb-2\"\n        >\n          Next Job\n        </Button>\n        <Button className=\"me-2 mb-2\" type=\"submit\" color=\"primary\">\n          Submit\n        </Button>\n        <Button\n          onClick={deletePage}\n          disabled={isEmpty(workHistoryTemp[page])}\n          type=\"button\"\n          color=\"danger\"\n          className=\"me-2 mb-2\"\n        >\n          Delete Job\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  FormText,\n  Input,\n  Label,\n  Button,\n} from 'reactstrap';\n\nexport default function SkillsForm(props) {\n  const { skills, setSkills } = props;\n\n  let numSkillsFromProps = null;\n  if (skills.skills3 || skills.category3) numSkillsFromProps = 3;\n  else if (skills.skills2 || skills.category2) numSkillsFromProps = 2;\n  else numSkillsFromProps = 1;\n\n  const [numSkills, setNumSkills] = useState(numSkillsFromProps || 1);\n\n  const [skillsTemp, setSkillsTemp] = useState(\n    JSON.parse(JSON.stringify(skills))\n  );\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const newSkills = {\n      title: skillsTemp.title,\n    };\n    for (let i = 1; i <= numSkills; i++) {\n      newSkills[`category${i}`] = skillsTemp[`category${i}`];\n      newSkills[`skills${i}`] = skillsTemp[`skills${i}`];\n    }\n    setSkills(newSkills);\n  };\n\n  const handleChange = e => {\n    const newSkills = JSON.parse(JSON.stringify(skillsTemp));\n    newSkills[e.target.name] = e.target.value;\n    setSkillsTemp(newSkills);\n  };\n\n  const addCategory = () => {\n    setNumSkills(numSkills + 1);\n  };\n\n  const removeCategory = () => {\n    setNumSkills(numSkills - 1);\n  };\n\n  return (\n    <div className=\"skills-form resume-form\">\n      <h3>{skillsTemp.title}</h3>\n      <Form onSubmit={onSubmitForm}>\n        <FormGroup>\n          <Label for=\"title\">Section Title</Label>\n          <Input\n            name=\"title\"\n            type=\"text\"\n            onChange={handleChange}\n            value={skillsTemp.title || ''}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"category1\">Category 1 (Optional)</Label>\n          <Input\n            name=\"category1\"\n            type=\"text\"\n            onChange={handleChange}\n            value={skillsTemp.category1 || ''}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"skills1\">{skillsTemp.title}</Label>\n          <Input\n            name=\"skills1\"\n            type=\"textarea\"\n            onChange={handleChange}\n            value={skillsTemp.skills1 || ''}\n          />\n        </FormGroup>\n        {numSkills > 1 ? (\n          <div>\n            <FormGroup>\n              <Label for=\"category2\">Category 2 (Optional)</Label>\n              <Input\n                name=\"category2\"\n                type=\"text\"\n                onChange={handleChange}\n                value={skillsTemp.category2 || ''}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"skills2\">{skillsTemp.title}</Label>\n              <Input\n                name=\"skills2\"\n                type=\"textarea\"\n                onChange={handleChange}\n                value={skillsTemp.skills2 || ''}\n              />\n            </FormGroup>\n          </div>\n        ) : (\n          <div />\n        )}\n        {numSkills > 2 ? (\n          <div>\n            <FormGroup>\n              <Label for=\"category3\">Category 3 (Optional)</Label>\n              <Input\n                name=\"category3\"\n                type=\"text\"\n                onChange={handleChange}\n                value={skillsTemp.category3 || ''}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"skills3\">{skillsTemp.title}</Label>\n              <Input\n                name=\"skills3\"\n                type=\"textarea\"\n                onChange={handleChange}\n                value={skillsTemp.skills3 || ''}\n              />\n            </FormGroup>\n          </div>\n        ) : (\n          <div />\n        )}\n        {numSkills < 3 ? (\n          <span>\n            <Button\n              className=\"me-2 mb-2\"\n              type=\"button\"\n              color=\"dark\"\n              onClick={addCategory}\n            >\n              Add Category\n            </Button>\n          </span>\n        ) : (\n          <span />\n        )}\n        {numSkills > 1 ? (\n          <span>\n            <Button\n              className=\"me-2 mb-2\"\n              type=\"button\"\n              color=\"danger\"\n              onClick={removeCategory}\n            >\n              Remove Category\n            </Button>\n          </span>\n        ) : (\n          <span />\n        )}\n        <Button className=\"me-2 mb-2\" type=\"submit\" color=\"primary\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { isEmpty } from '../WorkHistory';\nimport {\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  FormText,\n  Input,\n  Label,\n  Button,\n} from 'reactstrap';\n\nexport default function EducationForm(props) {\n  const { education, setEducation } = props;\n\n  const [educationTemp, setEducationTemp] = useState(\n    JSON.parse(JSON.stringify(education))\n  );\n\n  const [page, setPage] = useState(0);\n\n  const blankProgram = {\n    school: '',\n    degree: '',\n    startDate: '',\n    endDate: '',\n    description: '',\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const filteredEducation = educationTemp.filter(\n      program =>\n        program.school ||\n        program.degree ||\n        program.startDate ||\n        program.endDate ||\n        program.description\n    );\n    if (filteredEducation.length === 0) {\n      filteredEducation.push(blankProgram);\n    }\n    setEducation(filteredEducation);\n  };\n\n  const nextPage = () => {\n    if (!educationTemp[page + 1]) {\n      setEducationTemp([...educationTemp, blankProgram]);\n    }\n    setPage(page + 1);\n  };\n\n  const prevPage = () => {\n    if (page !== 0) {\n      setPage(page - 1);\n    }\n  };\n\n  const deletePage = () => {\n    const newEducationTemp = [];\n    for (let i = 0; i < educationTemp.length; i++) {\n      if (i !== page) {\n        newEducationTemp.push(educationTemp[i]);\n      }\n    }\n    if (newEducationTemp[0] === undefined) {\n      newEducationTemp.push(blankProgram);\n    }\n    setEducationTemp(newEducationTemp);\n    if (page > 0) {\n      setPage(page - 1);\n    }\n  };\n\n  const handleChange = e => {\n    const newEducation = JSON.parse(JSON.stringify(educationTemp));\n    newEducation[page][e.target.name] = e.target.value;\n    setEducationTemp(newEducation);\n  };\n\n  return (\n    <div className=\"education-form resume-form\">\n      <h3>Education</h3>\n      <Form onSubmit={onSubmitForm}>\n        <FormText>Program {page + 1}</FormText>\n        <FormGroup>\n          <Label for=\"school\">School/Organization</Label>\n          <Input\n            name=\"school\"\n            type=\"text\"\n            onChange={handleChange}\n            value={educationTemp[page].school || ''}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"degree\">Degree/Certification</Label>\n          <Input\n            name=\"degree\"\n            type=\"text\"\n            onChange={handleChange}\n            value={educationTemp[page].degree || ''}\n          />\n        </FormGroup>\n        <Row xs=\"1\" sm=\"2\">\n          <Col>\n            <FormGroup>\n              <Label for=\"startDate\">Start Date</Label>\n              <Input\n                name=\"startDate\"\n                type=\"text\"\n                onChange={handleChange}\n                value={educationTemp[page].startDate || ''}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"endDate\">End Date</Label>\n              <Input\n                name=\"endDate\"\n                type=\"text\"\n                onChange={handleChange}\n                value={educationTemp[page].endDate || ''}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <FormGroup>\n          <Label for=\"description\">Description</Label>\n          <Input\n            type=\"textarea\"\n            name=\"description\"\n            onChange={handleChange}\n            value={educationTemp[page].description || ''}\n          />\n        </FormGroup>\n        <Button\n          disabled={!page}\n          onClick={prevPage}\n          type=\"button\"\n          color=\"dark\"\n          className=\"me-2 mb-2\"\n        >\n          Previous Program\n        </Button>\n        <Button\n          onClick={nextPage}\n          disabled={isEmpty(educationTemp[page])}\n          type=\"button\"\n          color=\"dark\"\n          className=\"me-2 mb-2\"\n        >\n          Next Program\n        </Button>\n        <Button className=\"me-2 mb-2\" type=\"submit\" color=\"primary\">\n          Submit\n        </Button>\n        <Button\n          onClick={deletePage}\n          disabled={isEmpty(educationTemp[page])}\n          type=\"button\"\n          color=\"danger\"\n          className=\"me-2 mb-2\"\n        >\n          Delete Program\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  FormText,\n  Input,\n  Label,\n  Button,\n} from 'reactstrap';\n\nexport default function Preferences(props) {\n  const { preferences, setPreferences } = props;\n\n  const changeFont = font => {\n    let newFont = font;\n    if (font === 'Default') {\n      newFont =\n        'system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"';\n    }\n    if (font === 'Helvetica') {\n      newFont = 'Helvetica, Arial, sans-serif';\n    }\n    document.querySelector('.preview-window').style.fontFamily = newFont;\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const newPreferences = {\n      font: e.target.font.value,\n    };\n    setPreferences(newPreferences);\n  };\n\n  return (\n    <div className=\"preferences-form resume-form\">\n      <h3>Preferences</h3>\n      <Form onSubmit={onSubmitForm}>\n        <FormGroup>\n          <Label for=\"font\">Font</Label>\n          <Input\n            name=\"font\"\n            type=\"select\"\n            onChange={e => {\n              changeFont(e.target.value);\n            }}\n            defaultValue={preferences.font || ''}\n          >\n            <option>Default</option>\n            <option>Helvetica</option>\n            <option>Inter</option>\n            <option>Lato</option>\n            <option>Open Sans</option>\n            <option>Roboto</option>\n            <option>Source Sans Pro</option>\n          </Input>\n        </FormGroup>\n        <Button color=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import PersonalInfoForm from './forms/PersonalInfoForm';\nimport WorkHistoryForm from './forms/WorkHistoryForm';\nimport SkillsForm from './forms/SkillsForm';\nimport EducationForm from './forms/EducationForm';\nimport Preferences from './forms/Preferences';\n\nexport default function UpdateForms(props) {\n  const {\n    personalInfo,\n    setPersonalInfo,\n    workHistory,\n    setWorkHistory,\n    skills,\n    setSkills,\n    education,\n    preferences,\n    setPreferences,\n    setEducation,\n    activeForm,\n  } = props;\n\n  switch (activeForm) {\n    case 'PersonalInfoForm':\n      return (\n        <PersonalInfoForm\n          personalInfo={personalInfo}\n          setPersonalInfo={setPersonalInfo}\n        />\n      );\n    case 'WorkHistoryForm':\n      return (\n        <WorkHistoryForm\n          workHistory={workHistory}\n          setWorkHistory={setWorkHistory}\n        />\n      );\n    case 'SkillsForm':\n      return <SkillsForm skills={skills} setSkills={setSkills} />;\n    case 'EducationForm':\n      return (\n        <EducationForm education={education} setEducation={setEducation} />\n      );\n    case 'Preferences':\n      return (\n        <Preferences\n          preferences={preferences}\n          setPreferences={setPreferences}\n        />\n      );\n    default:\n      return <div></div>;\n  }\n}\n","export default function PersonalInfo(props) {\n  const { personalInfo } = props;\n\n  const contactProps = [\n    personalInfo.website,\n    personalInfo.email,\n    personalInfo.phone,\n  ].filter(item => item);\n\n  return (\n    <div>\n      <h2>{personalInfo.firstName + ' ' + personalInfo.lastName}</h2>\n      <div>{personalInfo.tagline}</div>\n      <div>{contactProps.join(personalInfo.joinChar)}</div>\n    </div>\n  );\n}\n","import { Container, Row, Col } from 'reactstrap';\n\nexport default function Skills(props) {\n  const { skills } = props;\n\n  let numSkills = null;\n  if (skills.skills3 || skills.category3) numSkills = 3;\n  else if (skills.skills2 || skills.category2) numSkills = 2;\n  else numSkills = 1;\n\n  if (skills.skills1 || skills.category1) {\n    return (\n      <Container fluid=\"true\">\n        <hr />\n        <h5 className=\"skills-title\">{skills.title}</h5>\n        <Row xs={1} sm={numSkills}>\n          <Col>\n            <h4 className=\"skills-category\">{skills.category1}</h4>\n            <p className=\"pre-wrap skills-skills\">{skills.skills1}</p>\n          </Col>\n          {skills.skills2 || skills.category2 ? (\n            <Col>\n              <h4 className=\"skills-category\">{skills.category2}</h4>\n              <p className=\"pre-wrap skills-skills\">{skills.skills2}</p>\n            </Col>\n          ) : (\n            <div />\n          )}\n          {skills.skills3 || skills.category3 ? (\n            <Col>\n              <h4 className=\"skills-category\">{skills.category3}</h4>\n              <p className=\"pre-wrap skills-skills\">{skills.skills3}</p>\n            </Col>\n          ) : (\n            <div />\n          )}\n        </Row>\n      </Container>\n    );\n  } else {\n    return <div />;\n  }\n}\n","export function isEmpty(obj) {\n  let empty = true;\n  Object.keys(obj).forEach(key => {\n    if (obj[key]) empty = false;\n  });\n  return empty;\n}\n\nexport default function Education(props) {\n  const { education } = props;\n\n  if (education.length > 0 && !isEmpty(education[0])) {\n    return (\n      <div>\n        <hr />\n        <h5>Education</h5>\n        {education.map(program => (\n          <div key={program.school} className=\"mt-2\">\n            <div className=\"job-top\">\n              <h3>{program.school}</h3>\n              {program.startDate || program.endDate ? (\n                <div>{program.startDate + ' – ' + program.endDate}</div>\n              ) : (\n                <div />\n              )}\n            </div>\n            <h4>{program.degree}</h4>\n            <div className=\"pre-wrap\">{program.description}</div>\n          </div>\n        ))}\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n","import PersonalInfo from './PersonalInfo';\nimport WorkHistory from './WorkHistory';\nimport Skills from './Skills';\nimport Education from './Education';\n\nexport default function Preview(props) {\n  const { personalInfo, workHistory, skills, education } = props;\n\n  return (\n    <div className=\"preview-window\">\n      <PersonalInfo personalInfo={personalInfo} />\n      <WorkHistory workHistory={workHistory} />\n      <Skills skills={skills} />\n      <Education education={education} />\n    </div>\n  );\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/App.css';\nimport Navigation from './components/Navigation';\nimport UpdateButtons from './components/UpdateButtons';\nimport UpdateForms from './components/UpdateForms';\nimport Preview from './components/Preview';\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nfunction App() {\n  const [personalInfo, setPersonalInfo] = useState({\n    firstName: 'Shaggy',\n    lastName: 'Rogers',\n    tagline: 'Detective and Cowardly Slacker',\n    email: 'shaggy@scoobydoo.com',\n    phone: '(903) 412-3375',\n    website: '',\n    joinChar: ' • ',\n  });\n\n  const [workHistory, setWorkHistory] = useState([\n    {\n      employer: 'Mystery Incorporated',\n      position: 'Co-Lead Detective',\n      startDate: 'September 1969',\n      endDate: 'Current',\n      description:\n        'Useful in ferreting out monsters and ghosts\\nOccasionally has a running speed faster than Scooby',\n    },\n    {\n      employer: 'The Daily Babbler',\n      position: 'Junior Paper Boy',\n      startDate: 'September 1988',\n      endDate: 'July 1989',\n      description:\n        'Got up early (sometimes) to deliver the daily paper route\\nAmbushed by a green ghost who stole the bike',\n    },\n  ]);\n\n  const [skills, setSkills] = useState({\n    title: 'Skills',\n    category1: 'Skills and Abilities',\n    skills1: `Acting as live bait for traps and providing necessary distractions\nUnique abilities in disguise and ventriliquism\nFlying planes and riding bikes\nPlaying the guitar and eating lots of snacks`,\n  });\n\n  const [education, setEducation] = useState([\n    {\n      school: 'Coolsville High School',\n      startDate: 'September 1988',\n      endDate: 'May 1992',\n      description:\n        'The best gymnast in school, according to Daphne Blake\\nMotivated and encouraged by Scooby Snacks',\n    },\n  ]);\n\n  const [preferences, setPreferences] = useState({\n    font: 'Default',\n  });\n\n  const [activeForm, setActiveForm] = useState(null);\n\n  useEffect(() => {\n    setActiveForm(null);\n  }, [personalInfo, workHistory, skills, education, preferences]);\n\n  return (\n    <div className=\"App\">\n      <Navigation title=\"Resume Studio\" />\n      <Container className=\"mt-4\">\n        <Row xs=\"1\" md=\"2\">\n          <Col className=\"mb-4 button-col\">\n            <UpdateButtons\n              activeForm={activeForm}\n              setActiveForm={setActiveForm}\n            />\n            <UpdateForms\n              personalInfo={personalInfo}\n              setPersonalInfo={setPersonalInfo}\n              workHistory={workHistory}\n              setWorkHistory={setWorkHistory}\n              skills={skills}\n              setSkills={setSkills}\n              education={education}\n              setEducation={setEducation}\n              preferences={preferences}\n              setPreferences={setPreferences}\n              activeForm={activeForm}\n            />\n          </Col>\n          <Col className=\"preview-col\">\n            <Preview\n              personalInfo={personalInfo}\n              workHistory={workHistory}\n              skills={skills}\n              education={education}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}